py_recur version 2021-02-07
opts_test
opts_override_input_rule = py_recur_verify.txt
opts_override_input_task = todo_verify.txt
opts_override_date = 2020-12-31
= = = = = = = = = = = enter from_string_patched
2021-01-01 this will match a entry in the todo_verify.txt and not be added
2021-01-02 (A) test stripping creation date with a priority
2021-01-03 test stripping creation date without a priority
x 2021-01-11 (A) 2021-01-04 test stripping in a completed task with priority
x 2021-01-12 2021-01-05 test stripping in a completed task without a priority
test stripping projects +project1 +project2 +project3
test stripping contexts @context1 @context2 @context3

- - - - - - - - - -
todo_pre_data:
None
2021-01-01
None
None
line: 2021-01-01 this will match a entry in the todo_verify.txt and not be added
final todo: 2021-01-01 this will match a entry in the todo_verify.txt and not be added
- - - - - - - - - -
todo_pre_data:
None
2021-01-02
A
None
line: 2021-01-02 (A) test stripping creation date with a priority
final todo: (A) 2021-01-02 test stripping creation date with a priority
- - - - - - - - - -
todo_pre_data:
None
2021-01-03
None
None
line: 2021-01-03 test stripping creation date without a priority
final todo: 2021-01-03 test stripping creation date without a priority
- - - - - - - - - -
todo_pre_data:
x
2021-01-11
A
2021-01-04
line: x 2021-01-11 (A) 2021-01-04 test stripping in a completed task with priority
final todo: x 2021-01-11 (A) 2021-01-04 test stripping in a completed task with priority
- - - - - - - - - -
todo_pre_data:
x
2021-01-12
None
2021-01-05
line: x 2021-01-12 2021-01-05 test stripping in a completed task without a priority
final todo: x 2021-01-12 2021-01-05 test stripping in a completed task without a priority
- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: test stripping projects +project1 +project2 +project3
final todo: test stripping projects +project1 +project2 +project3
- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: test stripping contexts @context1 @context2 @context3
final todo: test stripping contexts @context1 @context2 @context3
= = = = = = = = = = = exit from_string_patched
Processing day... 2020-12-30
py_recur.txt entry:  DAILY, dtstart=parse("20201230T000000") - this will match a entry in the todo_verify.txt and not be added
schedstr_fmt:  DTSTART:20201230T000000
RRULE:FREQ=DAILY;UNTIL=20201231T000000
rule_list: 
2020-12-30 00:00:00
2020-12-31 00:00:00
- Recur matches 2020-12-30: DAILY, dtstart=parse("20201230T000000") - this will match a entry in the todo_verify.txt and not be added
= = = = = = = = = = = enter from_string_patched
this will match a entry in the todo_verify.txt and not be added

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: this will match a entry in the todo_verify.txt and not be added
final todo: this will match a entry in the todo_verify.txt and not be added
= = = = = = = = = = = exit from_string_patched
    - Duplicate task exists: this will match a entry in the todo_verify.txt and not be added
py_recur.txt entry:  DAILY, dtstart=parse("20201230T000000") - this does not have an entry in the todo_verify.txt and be added
schedstr_fmt:  DTSTART:20201230T000000
RRULE:FREQ=DAILY;UNTIL=20201231T000000
rule_list: 
2020-12-30 00:00:00
2020-12-31 00:00:00
- Recur matches 2020-12-30: DAILY, dtstart=parse("20201230T000000") - this does not have an entry in the todo_verify.txt and be added
= = = = = = = = = = = enter from_string_patched
this does not have an entry in the todo_verify.txt and be added

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: this does not have an entry in the todo_verify.txt and be added
final todo: this does not have an entry in the todo_verify.txt and be added
= = = = = = = = = = = exit from_string_patched
    - No duplicate found for this does not have an entry in the todo_verify.txt and be added
    - Adding 2020-12-30 this does not have an entry in the todo_verify.txt and be added
py_recur.txt entry:  DAILY, interval=2, count=9 - every other day for a total of 9
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=DAILY;INTERVAL=2;COUNT=9
rule_list: 
2018-01-01 00:00:00
2018-01-03 00:00:00
2018-01-05 00:00:00
2018-01-07 00:00:00
2018-01-09 00:00:00
2018-01-11 00:00:00
2018-01-13 00:00:00
2018-01-15 00:00:00
2018-01-17 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU), count=8 - weekly on Sunday for a total of 8
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU;COUNT=8
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
2018-01-28 00:00:00
2018-02-04 00:00:00
2018-02-11 00:00:00
2018-02-18 00:00:00
2018-02-25 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(MO), count=6 - weekly on Monday for a total of 6
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=MO;COUNT=6
rule_list: 
2018-01-01 00:00:00
2018-01-08 00:00:00
2018-01-15 00:00:00
2018-01-22 00:00:00
2018-01-29 00:00:00
2018-02-05 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(WE), count=1 - first Wednesday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=WE;COUNT=1
rule_list: 
2018-01-03 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(TH), count=1 - first Thursday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=TH;COUNT=1
rule_list: 
2018-01-04 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(FR), count=1 - first Friday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=FR;COUNT=1
rule_list: 
2018-01-05 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SA), count=1 - first Saturday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SA;COUNT=1
rule_list: 
2018-01-06 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU,SA), count=4 - weekly on Sunday and Saturday for a total of 4
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU,SA;COUNT=4
rule_list: 
2018-01-06 00:00:00
2018-01-07 00:00:00
2018-01-13 00:00:00
2018-01-14 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU,MO,TU,WE,TH,FR,SA), bysetpos=6, count=5 - weekly on Friday for a total of 5
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU,MO,TU,WE,TH,FR,SA;BYSETPOS=6;COUNT=5
rule_list: 
2018-01-06 00:00:00
2018-01-13 00:00:00
2018-01-20 00:00:00
2018-01-27 00:00:00
2018-02-03 00:00:00
py_recur.txt entry:  WEEKLY, wkst=SU, byweekday=(SU), count=3 - no idea what wkst does, but I'm passing it
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;WKST=SU;BYWEEKDAY=SU;COUNT=3
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
py_recur.txt entry:  WEEKLY, wkst=MO, byweekday=(SU), count=3 - no idea what wkst does, but I'm passing it
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;WKST=MO;BYWEEKDAY=SU;COUNT=3
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(WE), byweekno=(1) - Wednesday in the first week of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=WE;BYWEEKNO=1;UNTIL=20201231T000000
rule_list: 
2018-01-03 00:00:00
2019-01-02 00:00:00
2020-01-01 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(TH), byweekno=(2,52) - Thursday in the second week and the 52nd week of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=TH;BYWEEKNO=2,52;UNTIL=20201231T000000
rule_list: 
2018-01-11 00:00:00
2018-12-27 00:00:00
2019-01-10 00:00:00
2019-12-26 00:00:00
2020-01-09 00:00:00
2020-12-24 00:00:00
py_recur.txt entry:  MONTHLY, bymonth=(9) - every September 1 
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTH=9;UNTIL=20201231T000000
rule_list: 
2018-09-01 00:00:00
2019-09-01 00:00:00
2020-09-01 00:00:00
py_recur.txt entry:  MONTHLY, bymonth=(10,11) - every October 1, November 1
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTH=10,11;UNTIL=20201231T000000
rule_list: 
2018-10-01 00:00:00
2018-11-01 00:00:00
2019-10-01 00:00:00
2019-11-01 00:00:00
2020-10-01 00:00:00
2020-11-01 00:00:00
py_recur.txt entry:  MONTHLY, bymonthday=(-1) - last day of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTHDAY=-1;UNTIL=20201231T000000
rule_list: 
2018-01-31 00:00:00
2018-02-28 00:00:00
2018-03-31 00:00:00
2018-04-30 00:00:00
2018-05-31 00:00:00
2018-06-30 00:00:00
2018-07-31 00:00:00
2018-08-31 00:00:00
2018-09-30 00:00:00
2018-10-31 00:00:00
2018-11-30 00:00:00
2018-12-31 00:00:00
2019-01-31 00:00:00
2019-02-28 00:00:00
2019-03-31 00:00:00
2019-04-30 00:00:00
2019-05-31 00:00:00
2019-06-30 00:00:00
2019-07-31 00:00:00
2019-08-31 00:00:00
2019-09-30 00:00:00
2019-10-31 00:00:00
2019-11-30 00:00:00
2019-12-31 00:00:00
2020-01-31 00:00:00
2020-02-29 00:00:00
2020-03-31 00:00:00
2020-04-30 00:00:00
2020-05-31 00:00:00
2020-06-30 00:00:00
2020-07-31 00:00:00
2020-08-31 00:00:00
2020-09-30 00:00:00
2020-10-31 00:00:00
2020-11-30 00:00:00
2020-12-31 00:00:00
py_recur.txt entry:  MONTHLY, bymonthday=(2,3) - the 2nd and 3rd of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTHDAY=2,3;UNTIL=20201231T000000
rule_list: 
2018-01-02 00:00:00
2018-01-03 00:00:00
2018-02-02 00:00:00
2018-02-03 00:00:00
2018-03-02 00:00:00
2018-03-03 00:00:00
2018-04-02 00:00:00
2018-04-03 00:00:00
2018-05-02 00:00:00
2018-05-03 00:00:00
2018-06-02 00:00:00
2018-06-03 00:00:00
2018-07-02 00:00:00
2018-07-03 00:00:00
2018-08-02 00:00:00
2018-08-03 00:00:00
2018-09-02 00:00:00
2018-09-03 00:00:00
2018-10-02 00:00:00
2018-10-03 00:00:00
2018-11-02 00:00:00
2018-11-03 00:00:00
2018-12-02 00:00:00
2018-12-03 00:00:00
2019-01-02 00:00:00
2019-01-03 00:00:00
2019-02-02 00:00:00
2019-02-03 00:00:00
2019-03-02 00:00:00
2019-03-03 00:00:00
2019-04-02 00:00:00
2019-04-03 00:00:00
2019-05-02 00:00:00
2019-05-03 00:00:00
2019-06-02 00:00:00
2019-06-03 00:00:00
2019-07-02 00:00:00
2019-07-03 00:00:00
2019-08-02 00:00:00
2019-08-03 00:00:00
2019-09-02 00:00:00
2019-09-03 00:00:00
2019-10-02 00:00:00
2019-10-03 00:00:00
2019-11-02 00:00:00
2019-11-03 00:00:00
2019-12-02 00:00:00
2019-12-03 00:00:00
2020-01-02 00:00:00
2020-01-03 00:00:00
2020-02-02 00:00:00
2020-02-03 00:00:00
2020-03-02 00:00:00
2020-03-03 00:00:00
2020-04-02 00:00:00
2020-04-03 00:00:00
2020-05-02 00:00:00
2020-05-03 00:00:00
2020-06-02 00:00:00
2020-06-03 00:00:00
2020-07-02 00:00:00
2020-07-03 00:00:00
2020-08-02 00:00:00
2020-08-03 00:00:00
2020-09-02 00:00:00
2020-09-03 00:00:00
2020-10-02 00:00:00
2020-10-03 00:00:00
2020-11-02 00:00:00
2020-11-03 00:00:00
2020-12-02 00:00:00
2020-12-03 00:00:00
py_recur.txt entry:  MONTHLY, byweekday=(MO,TU,WE,TH,FR), bysetpos=-1 - last workday of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=MO,TU,WE,TH,FR;BYSETPOS=-1;UNTIL=20201231T000000
rule_list: 
2018-01-31 00:00:00
2018-02-28 00:00:00
2018-03-30 00:00:00
2018-04-30 00:00:00
2018-05-31 00:00:00
2018-06-29 00:00:00
2018-07-31 00:00:00
2018-08-31 00:00:00
2018-09-28 00:00:00
2018-10-31 00:00:00
2018-11-30 00:00:00
2018-12-31 00:00:00
2019-01-31 00:00:00
2019-02-28 00:00:00
2019-03-29 00:00:00
2019-04-30 00:00:00
2019-05-31 00:00:00
2019-06-28 00:00:00
2019-07-31 00:00:00
2019-08-30 00:00:00
2019-09-30 00:00:00
2019-10-31 00:00:00
2019-11-29 00:00:00
2019-12-31 00:00:00
2020-01-31 00:00:00
2020-02-28 00:00:00
2020-03-31 00:00:00
2020-04-30 00:00:00
2020-05-29 00:00:00
2020-06-30 00:00:00
2020-07-31 00:00:00
2020-08-31 00:00:00
2020-09-30 00:00:00
2020-10-30 00:00:00
2020-11-30 00:00:00
2020-12-31 00:00:00
py_recur.txt entry:  MONTHLY, count=3, byweekday=(2TU) - second Tuesday of the month for 3 months
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=2TU;COUNT=3
rule_list: 
2018-01-09 00:00:00
2018-02-13 00:00:00
2018-03-13 00:00:00
py_recur.txt entry:  MONTHLY, count=6, byweekday=(1FR,-1FR) - first and last Friday of the month for 3 months
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=1FR,-1FR;COUNT=6
rule_list: 
2018-01-05 00:00:00
2018-01-26 00:00:00
2018-02-02 00:00:00
2018-02-23 00:00:00
2018-03-02 00:00:00
2018-03-30 00:00:00
py_recur.txt entry:  YEARLY, byeaster=-1, dtstart=parse("20000101T000000"), until=parse("20100101T000000") - 10 instances of day before easter
schedstr_fmt:  DTSTART:20000101T000000
RRULE:FREQ=YEARLY;BYEASTER=-1;UNTIL=20100101T000000
rule_list: 
2000-04-22 00:00:00
2001-04-14 00:00:00
2002-03-30 00:00:00
2003-04-19 00:00:00
2004-04-10 00:00:00
2005-03-26 00:00:00
2006-04-15 00:00:00
2007-04-07 00:00:00
2008-03-22 00:00:00
2009-04-11 00:00:00
py_recur.txt entry:  YEARLY, byeaster=0 - easters
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYEASTER=0;UNTIL=20201231T000000
rule_list: 
2018-04-01 00:00:00
2019-04-21 00:00:00
2020-04-12 00:00:00
py_recur.txt entry:  YEARLY, byeaster=1 - day after easters
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYEASTER=1;UNTIL=20201231T000000
rule_list: 
2018-04-02 00:00:00
2019-04-22 00:00:00
2020-04-13 00:00:00
py_recur.txt entry:  YEARLY, byyearday=(183) - mid year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=183;UNTIL=20201231T000000
rule_list: 
2018-07-02 00:00:00
2019-07-02 00:00:00
2020-07-01 00:00:00
py_recur.txt entry:  YEARLY, byyearday=(-1) - last day of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=-1;UNTIL=20201231T000000
rule_list: 
2018-12-31 00:00:00
2019-12-31 00:00:00
2020-12-31 00:00:00
py_recur.txt entry:  YEARLY, byyearday=(1,365) - first and last (non-leap) day of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=1,365;UNTIL=20201231T000000
rule_list: 
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-30 00:00:00
- Recur matches 2020-12-30: YEARLY, byyearday=(1,365) - first and last (non-leap) day of every year
= = = = = = = = = = = enter from_string_patched
first and last (non-leap) day of every year

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: first and last (non-leap) day of every year
final todo: first and last (non-leap) day of every year
= = = = = = = = = = = exit from_string_patched
    - No duplicate found for first and last (non-leap) day of every year
    - Adding 2020-12-30 first and last (non-leap) day of every year
Processing day... 2020-12-31
py_recur.txt entry:  DAILY, dtstart=parse("20201230T000000") - this will match a entry in the todo_verify.txt and not be added
schedstr_fmt:  DTSTART:20201230T000000
RRULE:FREQ=DAILY;UNTIL=20210101T000000
rule_list: 
2020-12-30 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
- Recur matches 2020-12-31: DAILY, dtstart=parse("20201230T000000") - this will match a entry in the todo_verify.txt and not be added
= = = = = = = = = = = enter from_string_patched
this will match a entry in the todo_verify.txt and not be added

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: this will match a entry in the todo_verify.txt and not be added
final todo: this will match a entry in the todo_verify.txt and not be added
= = = = = = = = = = = exit from_string_patched
    - Duplicate task exists: this will match a entry in the todo_verify.txt and not be added
py_recur.txt entry:  DAILY, dtstart=parse("20201230T000000") - this does not have an entry in the todo_verify.txt and be added
schedstr_fmt:  DTSTART:20201230T000000
RRULE:FREQ=DAILY;UNTIL=20210101T000000
rule_list: 
2020-12-30 00:00:00
2020-12-31 00:00:00
2021-01-01 00:00:00
- Recur matches 2020-12-31: DAILY, dtstart=parse("20201230T000000") - this does not have an entry in the todo_verify.txt and be added
= = = = = = = = = = = enter from_string_patched
this does not have an entry in the todo_verify.txt and be added

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: this does not have an entry in the todo_verify.txt and be added
final todo: this does not have an entry in the todo_verify.txt and be added
= = = = = = = = = = = exit from_string_patched
    - Duplicate task exists: this does not have an entry in the todo_verify.txt and be added
py_recur.txt entry:  DAILY, interval=2, count=9 - every other day for a total of 9
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=DAILY;INTERVAL=2;COUNT=9
rule_list: 
2018-01-01 00:00:00
2018-01-03 00:00:00
2018-01-05 00:00:00
2018-01-07 00:00:00
2018-01-09 00:00:00
2018-01-11 00:00:00
2018-01-13 00:00:00
2018-01-15 00:00:00
2018-01-17 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU), count=8 - weekly on Sunday for a total of 8
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU;COUNT=8
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
2018-01-28 00:00:00
2018-02-04 00:00:00
2018-02-11 00:00:00
2018-02-18 00:00:00
2018-02-25 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(MO), count=6 - weekly on Monday for a total of 6
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=MO;COUNT=6
rule_list: 
2018-01-01 00:00:00
2018-01-08 00:00:00
2018-01-15 00:00:00
2018-01-22 00:00:00
2018-01-29 00:00:00
2018-02-05 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(WE), count=1 - first Wednesday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=WE;COUNT=1
rule_list: 
2018-01-03 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(TH), count=1 - first Thursday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=TH;COUNT=1
rule_list: 
2018-01-04 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(FR), count=1 - first Friday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=FR;COUNT=1
rule_list: 
2018-01-05 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SA), count=1 - first Saturday in range
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SA;COUNT=1
rule_list: 
2018-01-06 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU,SA), count=4 - weekly on Sunday and Saturday for a total of 4
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU,SA;COUNT=4
rule_list: 
2018-01-06 00:00:00
2018-01-07 00:00:00
2018-01-13 00:00:00
2018-01-14 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(SU,MO,TU,WE,TH,FR,SA), bysetpos=6, count=5 - weekly on Friday for a total of 5
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=SU,MO,TU,WE,TH,FR,SA;BYSETPOS=6;COUNT=5
rule_list: 
2018-01-06 00:00:00
2018-01-13 00:00:00
2018-01-20 00:00:00
2018-01-27 00:00:00
2018-02-03 00:00:00
py_recur.txt entry:  WEEKLY, wkst=SU, byweekday=(SU), count=3 - no idea what wkst does, but I'm passing it
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;WKST=SU;BYWEEKDAY=SU;COUNT=3
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
py_recur.txt entry:  WEEKLY, wkst=MO, byweekday=(SU), count=3 - no idea what wkst does, but I'm passing it
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;WKST=MO;BYWEEKDAY=SU;COUNT=3
rule_list: 
2018-01-07 00:00:00
2018-01-14 00:00:00
2018-01-21 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(WE), byweekno=(1) - Wednesday in the first week of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=WE;BYWEEKNO=1;UNTIL=20210101T000000
rule_list: 
2018-01-03 00:00:00
2019-01-02 00:00:00
2020-01-01 00:00:00
py_recur.txt entry:  WEEKLY, byweekday=(TH), byweekno=(2,52) - Thursday in the second week and the 52nd week of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=WEEKLY;BYWEEKDAY=TH;BYWEEKNO=2,52;UNTIL=20210101T000000
rule_list: 
2018-01-11 00:00:00
2018-12-27 00:00:00
2019-01-10 00:00:00
2019-12-26 00:00:00
2020-01-09 00:00:00
2020-12-24 00:00:00
py_recur.txt entry:  MONTHLY, bymonth=(9) - every September 1 
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTH=9;UNTIL=20210101T000000
rule_list: 
2018-09-01 00:00:00
2019-09-01 00:00:00
2020-09-01 00:00:00
py_recur.txt entry:  MONTHLY, bymonth=(10,11) - every October 1, November 1
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTH=10,11;UNTIL=20210101T000000
rule_list: 
2018-10-01 00:00:00
2018-11-01 00:00:00
2019-10-01 00:00:00
2019-11-01 00:00:00
2020-10-01 00:00:00
2020-11-01 00:00:00
py_recur.txt entry:  MONTHLY, bymonthday=(-1) - last day of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTHDAY=-1;UNTIL=20210101T000000
rule_list: 
2018-01-31 00:00:00
2018-02-28 00:00:00
2018-03-31 00:00:00
2018-04-30 00:00:00
2018-05-31 00:00:00
2018-06-30 00:00:00
2018-07-31 00:00:00
2018-08-31 00:00:00
2018-09-30 00:00:00
2018-10-31 00:00:00
2018-11-30 00:00:00
2018-12-31 00:00:00
2019-01-31 00:00:00
2019-02-28 00:00:00
2019-03-31 00:00:00
2019-04-30 00:00:00
2019-05-31 00:00:00
2019-06-30 00:00:00
2019-07-31 00:00:00
2019-08-31 00:00:00
2019-09-30 00:00:00
2019-10-31 00:00:00
2019-11-30 00:00:00
2019-12-31 00:00:00
2020-01-31 00:00:00
2020-02-29 00:00:00
2020-03-31 00:00:00
2020-04-30 00:00:00
2020-05-31 00:00:00
2020-06-30 00:00:00
2020-07-31 00:00:00
2020-08-31 00:00:00
2020-09-30 00:00:00
2020-10-31 00:00:00
2020-11-30 00:00:00
2020-12-31 00:00:00
- Recur matches 2020-12-31: MONTHLY, bymonthday=(-1) - last day of every month
= = = = = = = = = = = enter from_string_patched
last day of every month

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: last day of every month
final todo: last day of every month
= = = = = = = = = = = exit from_string_patched
    - No duplicate found for last day of every month
    - Adding 2020-12-30 last day of every month
py_recur.txt entry:  MONTHLY, bymonthday=(2,3) - the 2nd and 3rd of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYMONTHDAY=2,3;UNTIL=20210101T000000
rule_list: 
2018-01-02 00:00:00
2018-01-03 00:00:00
2018-02-02 00:00:00
2018-02-03 00:00:00
2018-03-02 00:00:00
2018-03-03 00:00:00
2018-04-02 00:00:00
2018-04-03 00:00:00
2018-05-02 00:00:00
2018-05-03 00:00:00
2018-06-02 00:00:00
2018-06-03 00:00:00
2018-07-02 00:00:00
2018-07-03 00:00:00
2018-08-02 00:00:00
2018-08-03 00:00:00
2018-09-02 00:00:00
2018-09-03 00:00:00
2018-10-02 00:00:00
2018-10-03 00:00:00
2018-11-02 00:00:00
2018-11-03 00:00:00
2018-12-02 00:00:00
2018-12-03 00:00:00
2019-01-02 00:00:00
2019-01-03 00:00:00
2019-02-02 00:00:00
2019-02-03 00:00:00
2019-03-02 00:00:00
2019-03-03 00:00:00
2019-04-02 00:00:00
2019-04-03 00:00:00
2019-05-02 00:00:00
2019-05-03 00:00:00
2019-06-02 00:00:00
2019-06-03 00:00:00
2019-07-02 00:00:00
2019-07-03 00:00:00
2019-08-02 00:00:00
2019-08-03 00:00:00
2019-09-02 00:00:00
2019-09-03 00:00:00
2019-10-02 00:00:00
2019-10-03 00:00:00
2019-11-02 00:00:00
2019-11-03 00:00:00
2019-12-02 00:00:00
2019-12-03 00:00:00
2020-01-02 00:00:00
2020-01-03 00:00:00
2020-02-02 00:00:00
2020-02-03 00:00:00
2020-03-02 00:00:00
2020-03-03 00:00:00
2020-04-02 00:00:00
2020-04-03 00:00:00
2020-05-02 00:00:00
2020-05-03 00:00:00
2020-06-02 00:00:00
2020-06-03 00:00:00
2020-07-02 00:00:00
2020-07-03 00:00:00
2020-08-02 00:00:00
2020-08-03 00:00:00
2020-09-02 00:00:00
2020-09-03 00:00:00
2020-10-02 00:00:00
2020-10-03 00:00:00
2020-11-02 00:00:00
2020-11-03 00:00:00
2020-12-02 00:00:00
2020-12-03 00:00:00
py_recur.txt entry:  MONTHLY, byweekday=(MO,TU,WE,TH,FR), bysetpos=-1 - last workday of every month
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=MO,TU,WE,TH,FR;BYSETPOS=-1;UNTIL=20210101T000000
rule_list: 
2018-01-31 00:00:00
2018-02-28 00:00:00
2018-03-30 00:00:00
2018-04-30 00:00:00
2018-05-31 00:00:00
2018-06-29 00:00:00
2018-07-31 00:00:00
2018-08-31 00:00:00
2018-09-28 00:00:00
2018-10-31 00:00:00
2018-11-30 00:00:00
2018-12-31 00:00:00
2019-01-31 00:00:00
2019-02-28 00:00:00
2019-03-29 00:00:00
2019-04-30 00:00:00
2019-05-31 00:00:00
2019-06-28 00:00:00
2019-07-31 00:00:00
2019-08-30 00:00:00
2019-09-30 00:00:00
2019-10-31 00:00:00
2019-11-29 00:00:00
2019-12-31 00:00:00
2020-01-31 00:00:00
2020-02-28 00:00:00
2020-03-31 00:00:00
2020-04-30 00:00:00
2020-05-29 00:00:00
2020-06-30 00:00:00
2020-07-31 00:00:00
2020-08-31 00:00:00
2020-09-30 00:00:00
2020-10-30 00:00:00
2020-11-30 00:00:00
2020-12-31 00:00:00
- Recur matches 2020-12-31: MONTHLY, byweekday=(MO,TU,WE,TH,FR), bysetpos=-1 - last workday of every month
= = = = = = = = = = = enter from_string_patched
last workday of every month

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: last workday of every month
final todo: last workday of every month
= = = = = = = = = = = exit from_string_patched
    - No duplicate found for last workday of every month
    - Adding 2020-12-30 last workday of every month
py_recur.txt entry:  MONTHLY, count=3, byweekday=(2TU) - second Tuesday of the month for 3 months
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=2TU;COUNT=3
rule_list: 
2018-01-09 00:00:00
2018-02-13 00:00:00
2018-03-13 00:00:00
py_recur.txt entry:  MONTHLY, count=6, byweekday=(1FR,-1FR) - first and last Friday of the month for 3 months
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=MONTHLY;BYWEEKDAY=1FR,-1FR;COUNT=6
rule_list: 
2018-01-05 00:00:00
2018-01-26 00:00:00
2018-02-02 00:00:00
2018-02-23 00:00:00
2018-03-02 00:00:00
2018-03-30 00:00:00
py_recur.txt entry:  YEARLY, byeaster=-1, dtstart=parse("20000101T000000"), until=parse("20100101T000000") - 10 instances of day before easter
schedstr_fmt:  DTSTART:20000101T000000
RRULE:FREQ=YEARLY;BYEASTER=-1;UNTIL=20100101T000000
rule_list: 
2000-04-22 00:00:00
2001-04-14 00:00:00
2002-03-30 00:00:00
2003-04-19 00:00:00
2004-04-10 00:00:00
2005-03-26 00:00:00
2006-04-15 00:00:00
2007-04-07 00:00:00
2008-03-22 00:00:00
2009-04-11 00:00:00
py_recur.txt entry:  YEARLY, byeaster=0 - easters
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYEASTER=0;UNTIL=20210101T000000
rule_list: 
2018-04-01 00:00:00
2019-04-21 00:00:00
2020-04-12 00:00:00
py_recur.txt entry:  YEARLY, byeaster=1 - day after easters
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYEASTER=1;UNTIL=20210101T000000
rule_list: 
2018-04-02 00:00:00
2019-04-22 00:00:00
2020-04-13 00:00:00
py_recur.txt entry:  YEARLY, byyearday=(183) - mid year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=183;UNTIL=20210101T000000
rule_list: 
2018-07-02 00:00:00
2019-07-02 00:00:00
2020-07-01 00:00:00
py_recur.txt entry:  YEARLY, byyearday=(-1) - last day of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=-1;UNTIL=20210101T000000
rule_list: 
2018-12-31 00:00:00
2019-12-31 00:00:00
2020-12-31 00:00:00
- Recur matches 2020-12-31: YEARLY, byyearday=(-1) - last day of every year
= = = = = = = = = = = enter from_string_patched
last day of every year

- - - - - - - - - -
todo_pre_data:
None
None
None
None
line: last day of every year
final todo: last day of every year
= = = = = = = = = = = exit from_string_patched
    - No duplicate found for last day of every year
    - Adding 2020-12-30 last day of every year
py_recur.txt entry:  YEARLY, byyearday=(1,365) - first and last (non-leap) day of every year
schedstr_fmt:  DTSTART:20180101T000000
RRULE:FREQ=YEARLY;BYYEARDAY=1,365;UNTIL=20210101T000000
rule_list: 
2018-01-01 00:00:00
2018-12-31 00:00:00
2019-01-01 00:00:00
2019-12-31 00:00:00
2020-01-01 00:00:00
2020-12-30 00:00:00
2021-01-01 00:00:00


Here's the entries we're adding:


2020-12-30 this does not have an entry in the todo_verify.txt and be added
2020-12-30 first and last (non-leap) day of every year
2020-12-30 last day of every month
2020-12-30 last workday of every month
2020-12-30 last day of every year


Here is the final tototxtio file from memory:


2021-01-01 this will match a entry in the todo_verify.txt and not be added
(A) 2021-01-02 test stripping creation date with a priority
2021-01-03 test stripping creation date without a priority
x 2021-01-11 (A) 2021-01-04 test stripping in a completed task with priority
x 2021-01-12 2021-01-05 test stripping in a completed task without a priority
test stripping projects +project1 +project2 +project3
test stripping contexts @context1 @context2 @context3
2020-12-30 this does not have an entry in the todo_verify.txt and be added
2020-12-30 first and last (non-leap) day of every year
2020-12-30 last day of every month
2020-12-30 last workday of every month
2020-12-30 last day of every year
